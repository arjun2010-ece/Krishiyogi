Important Links
===============
https://www.youtube.com/watch?v=E8n2TAwUk7U&list=PLvQjNLQMdagP1lTH6SqDDd1v-hJ6e9KB8&index=25



Bootstrap flex and margin relation
====================================
By default we have a margin/padding of 10px on every block element and it becomes more prominent when using flex property in bootstrap.

<div class="d-flex justify-content-between">
  <span>Arjun</span>
  <p class="mb-0">This is a para and by default it will have a margin of 10px</p>
</div>


both span and p tag will not be on the same level horizontally to make them on same level we need to give mb-0 class on p tag.



Difference between containers and container fluids
================================================

Containers are smaller on screens and that is why we needs to see the UI and be able to tell that it is going to be container.
Container-fluid is full width screen.

In normal scenarios we use container-fluid with a width property .

<div class="container-fluid width"></div>

.width{
    width: 98%;
}
there will be little whitespace on both sides of screen.

-------------------
And row class is used with height class oderwise your div will have height equal to the content height.
<div class="row height mt-3">
          <div class="col-12 col-md-4 col-lg-4 bg-success">
            This is going to be amazing brow.
          </div>
</div>

.height{
    height: 100vh;
}


Bootstrap Navigation basic setup
================================

//navbar-expand-md tells from what screen size the below ul list needs to be visible oderwise hidden.
// collapse navbar-collapse makes the div and ul hidden.
// enable the toggler on medium screen.

 <nav class="navbar navbar-expand-md bg-success navbar-light">
        //here bg-success or anything is really important & navbar-light is also important.
        // bckground color and forground color needed if toggler button needs to be visible.
        <!-- brand -->
        <a href="#" class="navbar-brand text-uppercase">
          <h1>Admin Theme</h1>
        </a>

        <!-- toggler -->
        <button
          class="navbar-toggler"
          type="button"
          data-toggle="collapse"
          data-target="#myNavbar"
        >
          <span class="navbar-toggler-icon text-primary"></span>
        </button>
        
        <!-- navbar links -->
        <div class="collapse navbar-collapse" id="myNavbar">
          <ul class="navbar-nav mx-auto">
            <li class="nav-item active">
              <a class="nav-link" href="#">
                <i class="fa fa-home text-muted mr-3"></i>
                Dashboard
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">
                <i class="fa fa-list text-muted mr-3"></i>
                App
              </a>
            </li>
           </ul>
         </div>
</nav>


If you want something to be visible only one medium and above screen otherwise hidden then use a mix of "d-none d-md-flex" classes.
d-none will hide on all screen sizes.
d-md-flex will enable it on medium and above screens only.








Bootstrap Grid
===============
Extra small <576px	col-xs-4
Small ≥576px col-sm-4
Medium ≥768px	col-md-4
Large ≥992px	col-lg-4
Extra large ≥1200px col-xl-4
============================================
Form Styling in bootstrap
=========================

for simple elements :
we use form-group div and form-control element or input.
<form>
    <div class="form-group mt-3">
      <input type="text" class="form-control" id="name">
    </div>
    <!-- email -->
    <div class="form-group mt-3">
      <input type="email" class="form-control" id="email" placeholder="email">
    </div>
</form>

For appending or prepending divs
================================
for prepend::
a div of class "input-group-prepend" contain a span tag(class="input-group-text") with the appended text.

 <!-- input group -->
<div class="input-group my-3">
   <div class="input-group-prepend">
     <span class="input-group-text">username</span>
    </div>
    <input type="text" class="form-control" id="group-username">
</div>

For append and prepend both::
============================

<!-- prepend -->
<div class="input-group my-3">
 <div class="input-group-prepend">
   <span class="input-group-text">
     <i class="fas fa-user"></i>
  </span>
 </div>
<!-- end of prepend -->
<input type="text" class="form-control" id="group-user"
placeholder="username">
<!-- append -->
<div class="input-group-append">
  <button type="button" class="btn btn-primary">submit</button>
</div>
</div>


===========================================
Bootstrap Carousel::::
-------------------
Parent div will have a class of "carousel" and "slide" first and property data-ride="carousel".
id of parent div will be used in carousel indicator li's data-target.

It will have indicators denoted by ul(with class carousel-indicators) and
images container with class "carousel-inner".
Image container will have child div with "carousel-item" class.
each child div will have img tag with 2 important classes "d-block w-100".

The controls section will put forward and backward icon.
href="#example" in control will have parent id only.


        <div id="example" class="carousel slide" data-ride="carousel">
          <!-- indicators -->
          <ul class="carousel-indicators">
            <li data-target="#example" data-slide-to="0" class="active"></li>
            <li data-target="#example" data-slide-to="1"></li>
            <li data-target="#example" data-slide-to="2"></li>
            <li data-target="#example" data-slide-to="3"></li>
          </ul>
          <!-- end of indicators -->
          <!-- images -->
          <div class="carousel-inner">
            <div class="carousel-item active">
              <img src="img/projects-1.jpeg" alt="project" class="d-block w-100">
            </div>
            <div class="carousel-item">
              <img src="img/projects-2.jpeg" alt="project" class="d-block w-100">
            </div>
            <div class="carousel-item">
              <img src="img/projects-3.jpeg" alt="project" class="d-block w-100">
            </div>
            <div class="carousel-item">
              <img src="img/projects-4.jpeg" alt="project" class="d-block w-100">
            </div>
          </div>
          <!-- end of images -->
           <!-- controls -->
          <a href="#example" class="carousel-control-prev" data-slide="prev">
            <span class="carousel-control-prev-icon"></span>
          </a>
          <a href="#example" class="carousel-control-next" data-slide="next">
            <span class="carousel-control-next-icon"></span>
          </a>
        </div>




============================================
Bootstrap Card
==============
Body of card:
card has an child "card-body" div inside and another div "card-footer".

card-body div has a heading "card-title" and sub-body "card-text".

<div class="card">
          <img src="img/team-1.jpg" 
            alt="member" class="card-img-top">
          <div class="card-body">
            <h5 class="card-title text-capitalize">team member</h5>
            <p class="card-text">
              Lorem ipsum dolor sit amet consectetur adipisicing elit. Eius veritatis distinctio dolorum!
            </p>
            <a href="" class="btn btn-outline-warning text-uppercase">
              press here
            </a>
          </div>
          // card footer
          <div class="card-footer bg-secondary d-flex justify-content-around">
          </div>
</div>




============================================
Card images
-----------

<div class="card">   //bootstrap class card in parent div
  <img src="img/team-1.jpg" 
      alt="member" class="card-img-top"> // in image class is card-img-top
</div>

---------------------------------------------------
Remove and space between images and place it side by side
---------------------------------------------------------

Apply the super parent div a class of "no-gutters".
This super parent div will have 3/4 divs which contain images.

    <div class="row py-3 no-gutters">
      <!-- single project -->
      <div class="col-sm-6 col-md-4 my-3">
        <img src="img/projects-4.jpeg" alt="project" class="img-fluid">
      </div>
      <!--end of single project -->
      <div class="col-sm-6 col-md-4 my-3">
        <img src="img/projects-5.jpeg" alt="project" class="img-fluid">
      </div>
      <!--end of single project -->
      <div class="col-sm-6 col-md-4 my-3 mx-auto">
        <img src="img/projects-6.jpeg" alt="project" class="img-fluid">
      </div>
      <!--end of single project -->
    </div>

===========================================
Make image border red::
<div class="col-sm-6 col-md-4 my-3">
  <img src="img/projects-2.jpeg" alt="project" class="img-fluid img-thumbnail bg-danger border border-danger">
</div>

First apply img-thumbnail bg-danger.
Then apply fix of "border border-danger".

-------------------------------------------
Image classes  - image shd always be enclosed inside a div
---------------
<div class="col-sm-6 col-md-4 my-3">
        <img src="img/projects-3.jpeg" alt="project" class="img-fluid rounded-circle">
</div>

img-fluid -- make img responsive or keep it inside parent container
rounded -- make image slightly rounded on the edges.
rounded-circle-- make the image circular
img-thumbnail -- make thick white borders on image
===========================================
Image parallax
===============
.about-picture{
 background: url(../img/about-bcg.jpeg);
 background-size: cover;
 background-position: center;
 background-repeat: no-repeat;
 background-attachment: fixed; //his one creates parallax
}

background-attachment: fixed
This will make image fixed even if webpage is scrolled up or down.
Without this property image will move with webpage scroll.

===========================================
Usage of d-flex and align-self-center flex class
------------------------------------------------
bootstrap class "row" is by default equal to display:flex or flex container BUT BUT BUT
for other div to behave as flex container we have to use "d-flex" class.

If flex container has 2 items and one item is big and other is small then we can put small items in the mid of height of first item
by using class "align-self-center" .

 <div class="checkbox-item d-flex">
    <i class="fas fa-check fa-3x p-2 bg-warning mr-3 align-self-center"></i>
    <p class="text-light lead">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Corporis, beatae?</p>
 </div>



=============================================
Button class::
btn-primary vs btn-outline-primary:::

btn-primary gives blue bckground color.
While btn-outline-primary will have outline or btn borders as blue color by default but on hovering entire bckground comes 
as blue color.

<div class="col-md-6 col-lg-3">
 <a href="#" class="btn btn-outline-danger btn-block">press here</a>
</div>

By default buttons will take as much is reqd but not all.
But but if we apply "btn-block" class then it will take all the space available of parent div.
In above case, all 6-column will be covered by btn.

So story goes like that::

<div class="col-md-6 col-lg-3">
 <a href="#" class="btn btn-outline-danger">press here</a> //default
 <a href="#" class="btn btn-outline-danger btn-block">press here</a> //whole parent width
 <a href="#" class="btn btn-outline-danger w-75">press here</a>  //75% of parent width
</div>



=============================================
same is diff metwn col-sm vs col-md
---------------------------------
if col-md is applied then from medium screen width and beyond,everything will be on single row but less than medium width 
everything will be on multiple lines or rows.



diff between col-4 vs col-sm-4:::

<div class="container">
    <div class="row">
      <div class="col-4"></div>
      <div class="col-4"></div>
      <div class="col-4"></div>
    </div>
 </div>

For bigger screens both works fine.The problem of col-4 in smaller screens is fixed by col-sm-4.

On bigger screens and till space is sufficient col-4 will work perfectly but on smaller screens when space is not good
then the UI will not look good.
Whereas the fix is to use col-sm-4 that will make the content look good on smaller screen as well by putting diff col-sm-4 
in different lines.


+++++++++++++++++++++=++++++++++++++++++++++++
Nasic concept of col::

Col by default gives 12 column layout only if no other col is inside row or only one col is there

<div class="container">
    <div class="row">
      <div class="col">
      </div>
    </div>
 </div>

But if there are more than one col inside row then it will dynamically takes equal width inside a single row.

<div class="container">   // each col will take 6 column width.
    <div class="row">
      <div class="col">
      </div>
      <div class="col">
      </div>
    </div>
 </div>

==========================================================================
Horizontal centering of content.
-------------------------------
Since bootstrap class of row is a flexbox container so we can apply flexbox properties on it.
If we give a width to class col such as col-9(horizontal width) then it will not occupy whole 12 column layout
and upon applying class of "justify-content-center" on row-div, we can horizontally center the entire content.


<div class="container">
    <div class="row height align-items-center">
      <div class="col-9">
      </div>
    </div>
 </div>



=============================================================================

Vertical centering of content.

Since bootstrap class of row is a flexbox container so we can apply flexbox properties on it.
If we give a custom class height on row and apply bootstrap class "align-items-center" then the entire content will be 
on the center of the given custom height.

.height{
  min-height:100vh
}


<div class="container">
    <div class="row height align-items-center">
      <div class="col">
      </div>
    </div>
 </div>

================================================================================
<section class="bg-light">
  <div class="container">
  
  </div>
  </div>

Putting container inside section gives best of the both world of container and container-fluid bootstrap classes
as it gives some padding inside section on right and left.

===================================================================================

    <div class="container ">
       <div class="row">
            <p class="col-xl-4 col-lg-4 col-md-4 bg-success">col-x1-4</p> //here putting xl,lg,md will make it work on all
            <p class="col-xl-4 col-lg-4 col-md-4 bg-danger">col-x1-4</p>//3 screens starting from 768px to 1200+ px
            <p class="col-xl-4 col-lg-4 col-md-4 bg-info">col-x1-4</p>// and these 3 p-elements will not stack one over other.
        </div>

        <div class="row">
            <p class="col-md-4 bg-success">col-md-</p>//here md make it work from 768px onwards on all devices
            <p class="col-md-4 bg-danger">col-md-</p>
            <p class="col-md-4 bg-info">col-md-4</p>
        </div>
    </div>
    
    ============================================
    NAVIGATION
    ==========
                                                              //navbar-dark and bg-dark work together
    <nav class="navbar navbar-expand-sm navbar-dark bg-dark"> //nav tag will have 3 classes.bg-dark will give background dark
    </nav>                              //this is the structure of navbar(bootstrap)

    //for putting text inside navbar we need ul and li and a tag
    
    <nav class="navbar navbar-expand-sm bg-dark">
        <ul class="navbar-nav ">  //ul needs class navbar-nav
            <li class="nav-item"> //li needs class navbar-nav
                <a href="#" class="nav-link text-white">Home</a> //anchor tag needs class nav-link
            </li>                                           //nav-link class will give some padding between links and it will 
            <li class="nav-item">                           //center vertically too....
                <a href="#" class="nav-link text-white">About</a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link text-white">Service</a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link text-white">Contact</a>
            </li>
        </ul>
    </nav>
    
    a-->li-->ul
    nav-link --> nav-item -->navbar-nav
    
    for putting brand or logo-text in navigation
    =============================================
    
    <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
        <a href="#" class="navbar-brand">TheFrontendNinja</a> //given class will increase the font size and remove text-decoration.
        <ul class="navbar-nav ">
        </ul>
    </nav>
    
    untill now the Ui is that on left side there is logo and navigation just right after it.
    if we wrap everything inside container then logo will be on right and navigation on left.
    =========================================================================================
     <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
        <div class="container"> //this class doing the magic.....
            <a href="#" class="navbar-brand">TheFrontendNinja</a>
            <ul class="navbar-nav ">
            </ul>
        </div>
    </nav>
    
    
    
    
    
